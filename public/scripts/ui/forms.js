// Form handling & template population
(function(){
  function resetForm(){
    clearForm(); resetDeliverableItems(); stopProgressBar(false); setProgressBar(0); hideProgressBar(); $('#preconfigured-data-btn').prop('disabled', false);
    $('#suggested-area-paths-list').empty(); $('#suggested-iterations-list').empty(); clearWorkItemTypesDropdown(); clearAssignedToDropdown(); $('.form-control').removeClass('is-invalid'); $('#feature-name').text('').attr('href','#');
    const selectedOrganization=$('#organization-select').val(); const selectedProject=$('#project-select').val(); if (selectedOrganization && selectedProject){ $('#iteration').val(''); populateTeamProfile().then(()=> hideLoadingIndicator()).catch(err=> { console.error('Error fetching iterations for team:', err); hideLoadingIndicator(); }); }
    totalCalls = 0;
  }
  function clearForm(){ $('#feature-id, #area-path, #iteration, #deliverable-prefix, #estimates-sum').val(''); }
  function resetDeliverableItems(){ const $deliverables=$('.deliverable-item'); $deliverables.find('.deliverable-title').val(''); $deliverables.find('.deliverable-description').empty(); const prefixValue=''; $('.deliverable-item').each(function(){ const $p=$(this).find('.deliverable-prefix'); $p.val(prefixValue); $p.trigger('input'); }); $deliverables.each(function(index){ if (index>0){ $(this).remove(); } else { const $tasks=$(this).find('.task-item'); $tasks.not(':first').remove(); $tasks.find('.task-title, .task-estimate').val(''); $tasks.find('.task-description').empty(); } }); $deliverables.find('.description-section').hide(); $deliverables.find('.description-caret').removeClass('rotated'); updateDeliverableCount(); updateTaskCount(); updateDeleteDeliverableButtons(); updateDeleteTaskButtons(); updateDeliverableEstimates(); updateFeatureEstimate(); }
  async function populateFormWithPreconfiguredData(data){ let hasAnyDescription=false; const $firstDeliverable=$('.deliverable-item:first'); const $firstTaskItem=$firstDeliverable.find('.task-item:first'); $firstDeliverable.removeClass('is-invalid'); $firstTaskItem.removeClass('is-invalid'); $firstTaskItem.find('.task-title, .task-estimate').removeClass('is-invalid'); $('.deliverable-item').not(':first').slideUp(200,function(){ $(this).remove(); }); $('.task-item').not(':first').remove(); const $taskItemTemplate=$firstTaskItem.clone(); for (let i=0;i<data.template.workitems.length;i++){ const deliverable=data.template.workitems[i]; if (deliverable.description && deliverable.description.trim()) hasAnyDescription=true; const $newDeliverable=$firstDeliverable.clone(); $newDeliverable.attr('data-index', i+1); updateDeliverable($newDeliverable, deliverable); $newDeliverable.find('.task-item').not(':first').remove(); for (let j=1;j<deliverable.tasks.length;j++){ const task=deliverable.tasks[j]; if (task.description && task.description.trim()) hasAnyDescription=true; const $newTaskItem=$taskItemTemplate.clone(); updateTask($newTaskItem, task); $newDeliverable.find('.task-list').append($newTaskItem); $newTaskItem.find('.task-title, .task-estimate').removeClass('is-invalid'); } $newDeliverable.hide().appendTo('#deliverables-container').slideDown(200); $newDeliverable.find('.task-list').sortable({ handle: '.drag-handle', axis:'y', containment:'parent', tolerance:'pointer'}); }
    if (!hasAnyDescription){ $('#deliverables-container .description-section').hide(); $('#deliverables-container .description-caret').removeClass('rotated'); }
    $firstDeliverable.remove(); }
  async function removeAllDeliverablesAndTasks(){ $('.deliverable-item').slideUp(200,function(){ $(this).remove(); }); }
  function updateDeliverable($d,data){ $d.find('.deliverable-title').val(data.title).removeClass('is-invalid'); const $desc=$d.find('.deliverable-description'); if (window.RichTextEditor && window.ENABLE_RICH_TEXT_EDITOR){ window.RichTextEditor.setRichTextContent($desc, window.RichTextEditor.convertPlainTextToHtml(data.description || '')); } else { if ($desc.is('textarea')){ $desc.val(data.description || '').trigger('input'); } else { $desc.text(data.description || ''); } } if (data.description && data.description.trim()){ $d.find('.description-section').show(); $d.find('.description-caret').addClass('rotated'); } const $firstTask = $d.find('.task-item:first'); $firstTask.removeClass('is-invalid'); updateTask($firstTask, data.tasks[0]); }
  function updateTask($t,data){ $t.find('.task-title').val(data.title); $t.find('.task-estimate').val(data.estimate); const $desc=$t.find('.task-description'); if (window.RichTextEditor && window.ENABLE_RICH_TEXT_EDITOR){ window.RichTextEditor.setRichTextContent($desc, window.RichTextEditor.convertPlainTextToHtml(data.description || '')); } else { if ($desc.is('textarea')){ $desc.val(data.description || '').trigger('input'); } else { $desc.text(data.description || ''); } } if (data.description && data.description.trim()){ $t.find('.description-section').show(); $t.find('.description-caret').addClass('rotated'); } }
  window.resetForm = resetForm; window.clearForm = clearForm; window.resetDeliverableItems = resetDeliverableItems; window.populateFormWithPreconfiguredData = populateFormWithPreconfiguredData; window.removeAllDeliverablesAndTasks = removeAllDeliverablesAndTasks; window.updateDeliverable = updateDeliverable; window.updateTask = updateTask;
})();
